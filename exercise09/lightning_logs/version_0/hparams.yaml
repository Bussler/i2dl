activation: !!python/object:torch.nn.modules.activation.ELU
  _backward_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _buffers: !!python/object/apply:collections.OrderedDict
  - []
  _forward_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _modules: !!python/object/apply:collections.OrderedDict
  - []
  _non_persistent_buffers_set: !!set {}
  _parameters: !!python/object/apply:collections.OrderedDict
  - []
  _state_dict_hooks: !!python/object/apply:collections.OrderedDict
  - []
  alpha: 1.0
  inplace: false
  training: true
batch_size: 193
dim_activation_1:
- 16
- 93
- 93
dim_activation_2:
- 32
- 44
- 44
dim_activation_3:
- 64
- 21
- 21
dim_activation_4:
- 96
- 10
- 10
dim_activation_5: 1000
dim_conv2d_1:
- 16
- 93
- 93
dim_conv2d_2:
- 32
- 44
- 44
dim_conv2d_3:
- 64
- 21
- 21
dim_conv2d_4:
- 96
- 10
- 10
dim_dense_1: 1000
dim_dense_2: 1000
dim_dropout_1:
- 16
- 46
- 46
dim_dropout_2:
- 32
- 22
- 22
dim_dropout_3:
- 64
- 10
- 10
dim_dropout_4:
- 96
- 5
- 5
dim_dropout_5: 1000
dim_dropout_6: 1000
dim_flatten_1: 2400
dim_linear_1: 1000
dim_maxpooling2d_1:
- 16
- 46
- 46
dim_maxpooling2d_2:
- 32
- 22
- 22
dim_maxpooling2d_3:
- 64
- 10
- 10
dim_maxpooling2d_4:
- 96
- 5
- 5
input_channels: 1
input_size: 96
learning_rate: 0.001
loss: !!python/object:torch.nn.modules.loss.MSELoss
  _backward_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _buffers: !!python/object/apply:collections.OrderedDict
  - []
  _forward_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _modules: !!python/object/apply:collections.OrderedDict
  - []
  _non_persistent_buffers_set: !!set {}
  _parameters: !!python/object/apply:collections.OrderedDict
  - []
  _state_dict_hooks: !!python/object/apply:collections.OrderedDict
  - []
  reduction: mean
  training: true
optimizer: Adam
output_size: 30
p_dropout_incr: 0.1
